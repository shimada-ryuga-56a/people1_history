test:
  service: Disk
  root: <%= Rails.root.join("tmp/storage") %>

local:
  service: Disk
  root: <%= Rails.root.join("storage") %>

google:
  service: GCS
  project: {people1_images}
  credentials:
    {
      "type": 'service_account',
      "project_id": "<%= Rails.application.credentials.dig(:google_cloud_storage, :project_id) %>",
      "private_key_id": "<%= Rails.application.credentials.dig(:google_cloud_storage, :private_key_id) %>",
      "private_key": "<%= Rails.application.credentials.dig(:google_cloud_storage, :private_key) %>",
      "client_email": "<%= Rails.application.credentials.dig(:google_cloud_storage, :client_email) %>",
      "client_id": "<%= Rails.application.credentials.dig(:google_cloud_storage, :client_id) %>",
      "auth_uri": "<%= Rails.application.credentials.dig(:google_cloud_storage, :auth_uri) %>",
      "token_uri": "<%= Rails.application.credentials.dig(:google_cloud_storage, :token_uri) %>",
      "auth_provider_x509_cert_url": "<%= Rails.application.credentials.dig(:google_cloud_storage, :auth_provider_x509_cert_url) %>",
      "client_x509_cert_url": "<%= Rails.application.credentials.dig(:google_cloud_storage, :client_x509_cert_url) %>",
      "universe_domain": "googleapis.com"
    }
  bucket: {people1_images}

# Use bin/rails credentials:edit to set the Azure Storage secret (as azure_storage:storage_access_key)
# microsoft:
#   service: AzureStorage
#   storage_account_name: your_account_name
#   storage_access_key: <%= Rails.application.credentials.dig(:azure_storage, :storage_access_key) %>
#   container: your_container_name-<%= Rails.env %>

# mirror:
#   service: Mirror
#   primary: local
#   mirrors: [ amazon, google, microsoft ]
